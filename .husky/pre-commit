#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

echo "üîç Running pre-commit checks..."

# Check if we're in the right directory
if [ ! -f "package.json" ]; then
    echo "‚ùå Not in project root directory"
    exit 1
fi

# Backend checks
if [ -d "backend" ]; then
    echo "üîß Checking backend code..."
    cd backend
    
    # Run ESLint
    if command -v npx >/dev/null 2>&1; then
        echo "  Running ESLint..."
        npx eslint . --ext .js --max-warnings 0
        if [ $? -ne 0 ]; then
            echo "‚ùå Backend ESLint failed"
            exit 1
        fi
        
        # Run Prettier check
        echo "  Checking code formatting..."
        npx prettier --check "**/*.js"
        if [ $? -ne 0 ]; then
            echo "‚ùå Backend code formatting issues found. Run 'npm run format' to fix."
            exit 1
        fi
    fi
    
    cd ..
fi

# Frontend checks
if [ -d "afro-eats" ]; then
    echo "üé® Checking frontend code..."
    cd afro-eats
    
    if command -v npx >/dev/null 2>&1; then
        echo "  Running ESLint..."
        npx eslint src --ext .js,.jsx --max-warnings 0
        if [ $? -ne 0 ]; then
            echo "‚ùå Frontend ESLint failed"
            exit 1
        fi
        
        # Run Prettier check
        echo "  Checking code formatting..."
        npx prettier --check "src/**/*.{js,jsx,css}"
        if [ $? -ne 0 ]; then
            echo "‚ùå Frontend code formatting issues found. Run 'npm run format' to fix."
            exit 1
        fi
    fi
    
    cd ..
fi

# Check for secrets or sensitive data
echo "üîí Scanning for potential secrets..."
if grep -r -i --exclude-dir=node_modules --exclude-dir=.git --exclude="*.log" \
    -E "(password|secret|key|token|api_key).*=.*['\"][^'\"]{8,}" . | grep -v ".example" | grep -v "test" | grep -v ".md"; then
    echo "‚ùå Potential secrets found in code. Please review and remove sensitive data."
    exit 1
fi

# Check for large files
echo "üìÅ Checking for large files..."
find . -name "*.js" -o -name "*.jsx" -o -name "*.json" | while read file; do
    if [ -f "$file" ]; then
        size=$(wc -c < "$file")
        if [ $size -gt 100000 ]; then  # 100KB
            echo "‚ö†Ô∏è  Large file detected: $file (${size} bytes)"
        fi
    fi
done

echo "‚úÖ Pre-commit checks passed!"